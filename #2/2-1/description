How Typescript Works

이번 강의에서는
타입스크립트가 어떻게 생긴 언어인지,
어떻게 작동하는지 알아본다.

타입스크립트는 프로그래밍 언어이다.
strongly typed(강타입) 프로그래밍 언어이다.

타입스크립트의 경우에는 작성한 코드가 자바스크립트로 변환 된다.

타입스크립트가 제공하는 보호장치는
타입스크립트 코드가 자바스크립트로 변환되기 전에 발생한다.

즉 타입스크립트가 먼저 우리의 코드를 확인한 다음에
변환된 자바스크립트 안에서 바보같은 실수가 일어나지 않게 확인을 해준다.

결론적으로
타입스크립트 코드를 작성해서
그 코드를 컴파일하면, 보호장치 없는 일반적인 자바스크립트 코드가 되는데
하지만 타입스크립트 코드에 에러가 있으면 그 코드는
자바스크립트로 컴파일되지 않는다.

타입스크립트가 에러가 발생할 것 같은 코드를 감지하면 자바스크립트로 아예 컴파일되질 않는다.


첫번째 예시

const kronii = {
    nickname : "kronii"
}

kronii.hello()  <-- hello가 존재하지않아 에러가 발생하는 지점

해당 kronii 변수는 타입스크립트로 만들어졌는데
변수를 사용할 때 kronii안에 hello가 없기 때문에
타입스크립트는 컴파일 되기전에 에러를 표시해준다.


두번째 예시
[1,2,3,4] + false <-- 에러 발생 지점

에러 사유
숫자 배열에 boolean을 더할 수 없다는 에러가 나온다.


세번째 예시
function divide(a,b) {  <-- 에러 지점
    return a/b
}

divide("hello") <-- 에러 지점

에러 사유
1. divide는 2개의 argument를 필요로 한다.
2. 타입스크립트 에러 divide에 사용되는 a와 b의 데이터타입이 명시되지않았다.

여기엔 2가지의 보호장치가 있는데
1. 타입스크립트한테 a와 b가 숫자여야만 한다는 걸 알려줄 수 있다.
2. 그리고 입력값을 2개 받기 때문에 함수실행시 입력값이 숫자인 2개를 받아와야한다.

즉, 입력값의 데이터 타입, 입력값의 갯수를 보호 받을 수 있다.


이런 보호장치가 생기는 이유는 타입 추론 때문이다.
타입 추론에 대해서는 다음 강의에서 자세히 알아본다.